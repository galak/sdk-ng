From 55aed3d9ef0c3df4a01adca2593f0850298fcccf Mon Sep 17 00:00:00 2001
From: Anas Nashif <anas.nashif@intel.com>
Date: Wed, 4 Jul 2018 10:20:25 -0500
Subject: [PATCH] iamcu support

Signed-off-by: Anas Nashif <anas.nashif@intel.com>
---
 config/arch/x86.in        | 9 +++++++++
 scripts/build/arch/x86.sh | 5 +++++
 2 files changed, 14 insertions(+)

diff --git a/config/arch/x86.in b/config/arch/x86.in
index ab89ccda..cfda8384 100644
--- a/config/arch/x86.in
+++ b/config/arch/x86.in
@@ -12,3 +12,12 @@
 ## help The x86 architecture, as defined by:
 ## help     32-bit (ia32) : http://www.intel.com/
 ## help     64-bit (amd64): http://www.amd.com/us-en/Processors/DevelopWithAMD/0,,30_2252_875_7044,00.html
+#
+config ARCH_X86_IAMCU
+    bool
+    prompt "Use IAMCU"
+    default n
+    help
+      Set up the toolchain so that it generates IAMCU-compliant binaries.
+
+      If you say 'y' here, then the toolchain will generate IAMCU binaries.
diff --git a/scripts/build/arch/x86.sh b/scripts/build/arch/x86.sh
index 471d377a..115c81a8 100644
--- a/scripts/build/arch/x86.sh
+++ b/scripts/build/arch/x86.sh
@@ -23,6 +23,11 @@ CT_DoArchTupleValues() {
     fi
     CT_TARGET_ARCH="${CT_TARGET_ARCH}${CT_ARCH_SUFFIX}"
 
+    # The system part of the tuple:
+    case "${CT_LIBC},${CT_ARCH_X86_IAMCU}" in
+        *,y)        CT_TARGET_SYS=elfiamcu;;
+    esac
+
     # Shouldn't be possible to specify this (CT_TARGET_SYS is not specified by the user,
     # it is computed by scripts/functions from libc choices). But trap if such invalid
     # values ever come from the caller:
-- 
2.14.4

